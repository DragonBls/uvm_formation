`ifndef FIFO_OUT_DRIVER_SV
`define FIFO_OUT_DRIVER_SV

class fifo_out_driver extends uvm_driver #(fifo_out_item);

  `uvm_component_utils(fifo_out_driver)

  virtual fifo_out_if vif;

  fifo_out_config     m_config;

  extern function new(string name, uvm_component parent);

  // Methods run_phase and do_drive generated by setting driver_inc in file ./fifo_out.tpl
  extern task run_phase(uvm_phase phase);
  extern task do_drive();

endclass : fifo_out_driver 


function fifo_out_driver::new(string name, uvm_component parent);
  super.new(name, parent);
endfunction : new


task fifo_out_driver::run_phase(uvm_phase phase);
  `uvm_info(get_type_name(), "run_phase", UVM_HIGH)

  vif.cb_drv.data_out_rdy <= 0;
  forever
  begin
    seq_item_port.get_next_item(req);
      `uvm_info(get_type_name(), {"req item\n",req.sprint}, UVM_HIGH)
    do_drive();
    seq_item_port.item_done();
  end
endtask : run_phase

task fifo_out_driver::do_drive();
	@(vif.cb_drv)
	repeat(req.delay)begin
		@(vif.cb_drv);
	end
	vif.cb_drv.data_out_rdy <= 1;
	do begin
		@(vif.cb_drv);
	end while(vif.cb_drv.data_out_vld === 0);
	@(vif.cb_drv)
	vif.cb_drv.data_out_rdy <= 0;
endtask: do_drive

// Start of inlined include file generated_tb/tb/include/dummy.sv
// End of inlined include file

`endif // FIFO_OUT_DRIVER_SV

